/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n//Elements\r\nconst allInputs = document.querySelectorAll(\".form__input--special\")\r\nconst usernameInput = document.querySelector(\".form__username-search\");\r\nconst emailInput = document.querySelector(\".form__email-search\");\r\nconst passwordInput = document.querySelector(\".form__password-search\");\r\nconst checkboxField = document.querySelector(\".form__checkbox-input\");\r\nconst submitButton = document.querySelector(\".form__btn\");\r\nconst form = document.querySelector(\".form\");\r\nconst formWraps = document.querySelector(\".form__username-wrap\");\r\nconst modal = document.querySelector(\".modal__success\");\r\nconst modalCloseBtn = document.querySelector(\".modal__success-btn\");\r\n//Functions\r\n\r\nconst checkIsEmail = (email) => {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n};\r\n\r\nconst addClass = (element, selector) => {\r\n    element.classList.add(selector);\r\n};\r\n\r\nconst removeClass = (element, selector) => {\r\n    element.classList.remove(selector);\r\n};\r\n\r\nconst errorMessage = (element, message) => {\r\n    element.setAttribute(\"placeholder\", message);\r\n};\r\n\r\nconst closeModal = (element, modalSelector, selector) => {\r\n    element.addEventListener(\"click\", () => {\r\n        modalSelector.classList.remove(selector);\r\n    });\r\n};\r\n\r\nconst checkAllInputs = () => {\r\n    const usernameValue = usernameInput.value.trim();\r\n    const emailValue = emailInput.value.trim();\r\n    const passwordValue = passwordInput.value.trim();\r\n\r\n    //Check username\r\n    if (usernameValue === \"\" || usernameValue == null) {\r\n        addClass(usernameInput, \"error\");\r\n        removeClass(usernameInput, \"success\");\r\n        errorMessage(usernameInput, \"Username is empty\");\r\n    } else {\r\n        usernameInput.removeAttribute(\"placeholder\");\r\n        removeClass(usernameInput, \"error\");\r\n        addClass(usernameInput, \"success\");\r\n    }\r\n    //Check email\r\n    if (emailValue === \"\" || emailValue == null) {\r\n        addClass(emailInput, \"error\");\r\n        removeClass(emailInput, \"success\");\r\n        errorMessage(emailInput, \"Email is empty\");\r\n    } else if (!checkIsEmail(emailValue)) {\r\n        addClass(emailInput, \"error\");\r\n        removeClass(emailInput, \"success\");\r\n        errorMessage(emailInput, \"Email is empty\");\r\n    } else {\r\n        emailInput.removeAttribute(\"placeholder\");\r\n        removeClass(emailInput, \"error\");\r\n        addClass(emailInput, \"success\");\r\n    }\r\n    //Check password \r\n    if (passwordValue === \"\" || passwordValue == null) {\r\n        addClass(passwordInput, \"error\");\r\n        removeClass(passwordInput, \"success\");\r\n        errorMessage(passwordInput, \"Password is empty\");\r\n    } else {\r\n        passwordInput.removeAttribute(\"placeholder\");\r\n        removeClass(passwordInput, \"error\");\r\n        addClass(passwordInput, \"success\");\r\n    }\r\n\r\n    if (usernameValue && checkIsEmail(emailValue) && passwordValue) {\r\n        modal.classList.add(\"block\")\r\n    }\r\n\r\n    allInputs.forEach(input => {\r\n        input.value = \"\";\r\n    });\r\n};\r\n//Evenet Listeners\r\nsubmitButton.addEventListener(\"click\", (event) => {\r\n    event.preventDefault();\r\n    checkAllInputs();\r\n});\r\nmodalCloseBtn.addEventListener(\"click\", closeModal(modalCloseBtn, modal, \"block\"));\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;